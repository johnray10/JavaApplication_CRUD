/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author JayJomJohn
 */
public class ChangePassword extends javax.swing.JFrame {

    Connection conn;
    ResultSet rs;
    PreparedStatement pst;
    public static String usernameGetter, passwordGetter;
    
    public ChangePassword() {
        initComponents();
        conn=JavaConnector.ConnectDb();
        showIcon();
        
    }
    //DISPLAY ICON
    private void showIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Image/school.png")));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCurrentPassword = new javax.swing.JLabel();
        chckbox_ShowPassword1 = new javax.swing.JCheckBox();
        txt_currentpassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        txt_newpassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        txt_confirmnewpassword = new javax.swing.JPasswordField();
        chckbox_ShowPassword2 = new javax.swing.JCheckBox();
        btnBack = new javax.swing.JButton();
        btnChangePassword = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(460, 425));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCurrentPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCurrentPassword.setText("Current Password:");
        jPanel1.add(lblCurrentPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 120, 30));

        chckbox_ShowPassword1.setText("SHOW PASSWORD");
        chckbox_ShowPassword1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chckbox_ShowPassword1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckbox_ShowPassword1ActionPerformed(evt);
            }
        });
        jPanel1.add(chckbox_ShowPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, -1, -1));

        txt_currentpassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_currentpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_currentpasswordKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_currentpasswordKeyTyped(evt);
            }
        });
        jPanel1.add(txt_currentpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 210, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("New Password:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 120, 30));

        txt_newpassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_newpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_newpasswordKeyTyped(evt);
            }
        });
        jPanel1.add(txt_newpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 210, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Confirm New Password");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 150, 30));

        txt_confirmnewpassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_confirmnewpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_confirmnewpasswordKeyTyped(evt);
            }
        });
        jPanel1.add(txt_confirmnewpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 210, 30));

        chckbox_ShowPassword2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        chckbox_ShowPassword2.setText("SHOW PASSWORD");
        chckbox_ShowPassword2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chckbox_ShowPassword2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckbox_ShowPassword2ActionPerformed(evt);
            }
        });
        jPanel1.add(chckbox_ShowPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, -1, -1));

        btnBack.setBackground(new java.awt.Color(153, 0, 51));
        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("BACK");
        btnBack.setBorderPainted(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 270, 120, 30));

        btnChangePassword.setBackground(new java.awt.Color(0, 153, 204));
        btnChangePassword.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnChangePassword.setForeground(new java.awt.Color(255, 255, 255));
        btnChangePassword.setText("CHANGE");
        btnChangePassword.setBorderPainted(false);
        btnChangePassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChangePassword.setFocusPainted(false);
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });
        jPanel1.add(btnChangePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 270, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void chckbox_ShowPassword1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckbox_ShowPassword1ActionPerformed
        if (chckbox_ShowPassword1.isSelected()) {
            txt_currentpassword.setEchoChar((char) 0);
        } else {
            txt_currentpassword.setEchoChar('*');
        }
        this.lblCurrentPassword.requestFocus();
    }//GEN-LAST:event_chckbox_ShowPassword1ActionPerformed

    private void chckbox_ShowPassword2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckbox_ShowPassword2ActionPerformed
        if (chckbox_ShowPassword2.isSelected()) {
            txt_newpassword.setEchoChar((char) 0);
            txt_confirmnewpassword.setEchoChar((char) 0);
        } else {
            txt_newpassword.setEchoChar('*');
            txt_confirmnewpassword.setEchoChar('*');
        }
        this.lblCurrentPassword.requestFocus();
    }//GEN-LAST:event_chckbox_ShowPassword2ActionPerformed
 private void Reset() {
        txt_currentpassword.setText("");
        txt_newpassword.setText("");
        txt_confirmnewpassword.setText("");
        chckbox_ShowPassword1.setSelected(false);
        chckbox_ShowPassword2.setSelected(false);
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if (btnBack.getText().equals("BACK")) {
            this.hide();
            Reset();
            new MainFrame().setVisible(true);
        } else {
            int P = JOptionPane.showConfirmDialog(null, " Are you sure want to cancel ?", "ATTENTION", JOptionPane.YES_NO_OPTION);
            if (P == JOptionPane.YES_OPTION) {
                this.hide();
                Reset();
                new MainFrame().setVisible(true);
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed
    
    private void Reading() {
        if (!txt_newpassword.getText().equals(txt_confirmnewpassword.getText())) {
            JOptionPane.showMessageDialog(this, "Your New Password and Confirm New Password are not the same !", "ATTENTION", JOptionPane.ERROR_MESSAGE);
        } else if (txt_currentpassword.getText().equals(txt_confirmnewpassword.getText())) {
            JOptionPane.showMessageDialog(this, "Your Password is current used !", "ATTENTION", JOptionPane.ERROR_MESSAGE);
        } else {
            Updating();
        }
    }
    
     private void Updating() {
        try {
            pst = conn.prepareStatement("UPDATE tbl_Users set Password = ? WHERE Username = ?");
            pst.setString(1, txt_confirmnewpassword.getText());
            pst.setString(2, usernameGetter);
            pst.execute();
            JOptionPane.showMessageDialog(this, "SUCCESSFULY UPDATED !", "ATTENTION", JOptionPane.INFORMATION_MESSAGE);
            passwordGetter = txt_confirmnewpassword.getText();
            Reset();
            this.hide();
            new MainFrame().setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        if (txt_currentpassword.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Current Password!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txt_currentpassword.requestFocus();
        } else if (txt_newpassword.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No New Password!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txt_newpassword.requestFocus();
        } else if (txt_confirmnewpassword.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Confirm New Password!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txt_confirmnewpassword.requestFocus();
        } else {
            if (!passwordGetter.equals(txt_currentpassword.getText())) {
                JOptionPane.showMessageDialog(this, "You're Current Password is invalid!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            } else {
                Reading();
            }
        }
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void txt_currentpasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_currentpasswordKeyReleased
       if (!txt_currentpassword.getText().equals("")) {
            btnBack.setText("CANCEL");
        } else {
            btnBack.setText("BACK");
        }
    }//GEN-LAST:event_txt_currentpasswordKeyReleased

    private void txt_currentpasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_currentpasswordKeyTyped
         char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txt_currentpassword.getText().length() >= 12) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_currentpasswordKeyTyped

    private void txt_newpasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_newpasswordKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txt_newpassword.getText().length() >= 12) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_newpasswordKeyTyped

    private void txt_confirmnewpasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_confirmnewpasswordKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txt_confirmnewpassword.getText().length() >= 12) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_confirmnewpasswordKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /*if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/
                UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JCheckBox chckbox_ShowPassword1;
    private javax.swing.JCheckBox chckbox_ShowPassword2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCurrentPassword;
    private javax.swing.JPasswordField txt_confirmnewpassword;
    private javax.swing.JPasswordField txt_currentpassword;
    private javax.swing.JPasswordField txt_newpassword;
    // End of variables declaration//GEN-END:variables
}
